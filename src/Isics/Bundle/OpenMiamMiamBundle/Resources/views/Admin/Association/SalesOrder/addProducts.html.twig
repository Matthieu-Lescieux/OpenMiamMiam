{#
 # This file is part of the OpenMiamMiam project.
 # (c) Isics <contact@isics.fr>
 #
 # This source file is subject to the AGPL v3 license that is bundled
 # with this source code in the file LICENSE.
 #}
{% import "IsicsOpenMiamMiamBundle:Macro:product.html.twig" as product_macro %}
{% extends app.request.xmlHttpRequest ? 'IsicsOpenMiamMiamBundle:Admin:addProductsDialog.html.twig' : 'IsicsOpenMiamMiamBundle:Admin:admin.html.twig' %}

{% block content %}
    {% if not app.request.xmlHttpRequest %}
        <h1>{{ 'admin.association.sales_orders.add_products.title'|trans }}</h1>
    {% endif %}

    <h2>{{ 'artificial_product'|trans }}</h2>
    {{ form_start(artificialProductForm, {'attr': {'novalidate': '', 'id': 'add-artificial-product-form'}}) }}
        {{ form_errors(artificialProductForm) }}

        <div class="row">
            <div class="col-md-3">
                {{ form_errors(artificialProductForm.producer) }}
                {{ form_widget(artificialProductForm.producer, {'attr': {'class': 'form-control'} }) }}
            </div>

            <div class="col-md-4">
                {{ form_errors(artificialProductForm.name) }}
                {{ form_widget(artificialProductForm.name, {'attr': {'class': 'form-control', 'placeholder': 'admin.association.sales_orders.add_products.name'|trans} }) }}
            </div>

            <div class="col-md-3">
                <div class="input-group">
                    {{ form_errors(artificialProductForm.price) }}
                    {{ form_widget(artificialProductForm.price, {'attr': {'class': 'form-control', 'placeholder': 'admin.association.sales_orders.add_products.price'|trans} }) }}
                    <span class="input-group-addon">{{ open_miam_miam.currency }}</span>
                </div>
            </div>

            <div class="col-md-2">
                <button type="submit" class="btn btn-primary btn-block">
                    <span class="glyphicon glyphicon-plus-sign"></span>
                    {{ 'admin.add'|trans }}
                </button>
                {% do artificialProductForm.add.setRendered %}
            </div>
        </div>

        {{ form_rest(artificialProductForm) }}
    {{ form_end(artificialProductForm) }}

    <h2>{{ 'catalog'|trans }}</h2>
    {{ form_start(filterForm, {'attr': {'novalidate': '', 'id': 'filter-products-form', 'class': 'form form-inline'}}) }}
        <div class="table-responsive">
            <table class="table table-condensed table-striped">
                <thead>
                    <tr>
                        <th>
                            {{ 'admin.association.sales_orders.add_products.producer'|trans }}
                            {{ form_errors(filterForm.producer) }}
                            {{ form_widget(filterForm.producer, {'attr': {'class': 'form-control input-sm'}}) }}
                        </th>
                        <th>
                            {{ 'admin.association.sales_orders.add_products.name'|trans }}
                            {{ form_errors(filterForm.name) }}
                            {{ form_widget(filterForm.name, {'attr': {'class': 'form-control input-sm'}}) }}
                        </th>
                        <th>{{ 'admin.association.sales_orders.add_products.price'|trans }}</th>
                        <th>{{ 'admin.association.sales_orders.add_products.availability'|trans }}</th>
                        <th>&nbsp;{% do filterForm.filter.setRendered %}</th>
                    </tr>
                </thead>
                <tbody>
                    {% for product in products %}
                        {% set availabilityInfos = get_product_availability(order.branchOccurrence, product) %}
                        <tr{% if not availabilityInfos.isAvailable %} class="unavailable"{% endif %}>
                            <td>{{ product.producer.name }}</td>
                            <td>{{ product.name }}</td>
                            <td>{{ product.price|number_format_currency(open_miam_miam.currency) }}</td>
                            <td>
                                {{ product_macro.availability_tag(availabilityInfos, 'backend.') }}
                            </td>
                            <td>
                                {% if availabilityInfos.isAvailable %}
                                    <a href="{{ path('open_miam_miam.admin.association.sales_order.add_product', {'id': association.id, 'salesOrderId': order.id, 'productId': product.id}) }}" class="add-product-link btn btn-primary btn-block">
                                        <span class="glyphicon glyphicon-plus-sign"></span>
                                        {{ 'admin.association.sales_orders.add_products.add'|trans }}
                                    </a>
                                {% endif %}
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5">
                                {% include 'IsicsOpenMiamMiamBundle:Admin:empty.html.twig' with {'message': 'admin.association.sales_orders.add_products.no_product'|trans} %}
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {{ form_end(filterForm) }}

    {% if not app.request.xmlHttpRequest %}
        <a href="{{ path('open_miam_miam.admin.association.sales_order.edit', {'id': association.id, 'salesOrderId': order.id}) }}" class="pull-right">{{ 'admin.association.sales_orders.add_products.return'|trans }}</a>
    {% endif %}
{% endblock content %}
